set(LIB_NAME backtest)
set(SRC_LIST
    runner.cpp
    LogPalPattern.cpp
    McptConfigurationFileReader.cpp
    TimeFrameUtility.cpp
    TimeSeries.cpp
    TimeSeriesEntry.cpp
    BacktesterStrategy.cpp
    BackTester.h
    BacktesterStrategy.h
    BoostDateHelper.h
    ClosedPositionHistory.h
    csv.h
    DateRange.h
    DecimalConstants.h
    decimal.h
    InstrumentPosition.h
    InstrumentPositionManagerException.h
    InstrumentPositionManager.h
    LogPalPattern.h
    LogRobustnessTest.h
    MapUtilities.h
    McptConfigurationFileReader.h
    MCPTStrategyAttributes.h
    MonteCarloPermutationTest.h
    PALMonteCarloValidation.h
    PALPatternInterpreter.h
    PalStrategy.h
    PercentNumber.h
    Portfolio.h
    ProfitTarget.h
    RandomMersenne.h
    RobustnessTester.h
    RobustnessTest.h
    SecurityAttributesFactory.h
    SecurityAttributes.h
    SecurityBacktestProperties.h
    SecurityFactory.h
    Security.h
    StopLoss.h
    StrategyBroker.h
    StrategyTransaction.h
    StrategyTransactionManager.h
    SyntheticTimeSeries.h
    TimeFrame.h
    TimeFrameUtility.h
    TimeSeriesCsvReader.h
    TimeSeriesCsvWriter.h
    TimeSeriesEntry.h
    TimeSeries.h
    TimeSeriesIndicators.h
    TradingOrderException.h
    TradingOrder.h
    TradingOrderManager.h
    TradingPositionException.h
    TradingPosition.h
    TradingVolume.h
    VectorDecimal.h
    TimeFrameDiscovery.h
    SyntheticTimeSeriesCreator.h
)
add_library(${LIB_NAME} STATIC ${SRC_LIST})
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES LINKER_LANGUAGE CXX)
target_link_libraries(${LIB_NAME} priceaction2 ${CMAKE_THREAD_LIBS_INIT})
